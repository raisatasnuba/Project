<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>